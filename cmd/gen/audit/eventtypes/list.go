/*
*	DO NOT EDIT THIS FILE
*	IT IS AUTO GENERATED BY MGC
*	TEMPLATE: product.template
 */

package eventtypes

import (
	"context"

	
	"github.com/spf13/cobra"
	
	auditSdk "github.com/MagaluCloud/mgc-sdk-go/audit"
	
	flags "gfcli/cobra_utils/flags"
	
	"encoding/json"
	
	"gfcli/cmd_utils"
	
	"fmt"
)

func List(ctx context.Context, parent *cobra.Command, eventTypeService auditSdk.EventTypeService) {
	
	var params_LimitFlag *flags.IntFlag //CobraFlagsDefinition
	
	var params_OffsetFlag *flags.IntFlag //CobraFlagsDefinition
	
	var params_TenantIDFlag *flags.StrFlag //CobraFlagsDefinition
	
	

	cmd := &cobra.Command{
		Use:     "list",
		Short:   "Events, EventTypes.",
		Long:    `defaultLongDesc 3`,
		Run: func(cmd *cobra.Command, args []string) {
			
			
			var params *auditSdk.ListEventTypesParams// ServiceSDKParamCreate
			
			
			

			
			
			if params_LimitFlag.IsChanged() {
				params.Limit = params_LimitFlag.Value
			}// CobraFlagsAssign
			
			if params_OffsetFlag.IsChanged() {
				params.Offset = params_OffsetFlag.Value
			}// CobraFlagsAssign
			
			if params_TenantIDFlag.IsChanged() {
				params.TenantID = params_TenantIDFlag.Value
			}// CobraFlagsAssign
			

			eventtype, err := eventTypeService.List(ctx, params)
			
			if err != nil {
			msg, detail := cmdutils.ParseSDKError(err)
					fmt.Println(msg)
					fmt.Println(detail)
					return
				}
			
			sdkResult, err := json.MarshalIndent(eventtype, "", "  ")

			if err != nil {
			msg, detail := cmdutils.ParseSDKError(err)
					fmt.Println(msg)
					fmt.Println(detail)
					return
				}
			
			fmt.Println(string(sdkResult))
		},
	}
	
	
	params_LimitFlag = flags.NewIntP(cmd, "limit", "l", 0, "")//CobraFlagsCreation
	
	params_OffsetFlag = flags.NewIntP(cmd, "offset", "f", 0, "")//CobraFlagsCreation
	
	params_TenantIDFlag = flags.NewStrP(cmd, "tenant-i-d", "t", "", "")//CobraFlagsCreation
	


	
	parent.AddCommand(cmd)

}

