/*
*	DO NOT EDIT THIS FILE
*	IT IS AUTO GENERATED BY MGC
*	TEMPLATE: product.template
 */

package instances

import (
	"context"

	
	"github.com/spf13/cobra"
	
	dbaasSdk "github.com/MagaluCloud/mgc-sdk-go/dbaas"
	
	flags "mgccli/cobra_utils/flags"
	
	"encoding/json"
	
	"mgccli/cmd_utils"
	
	"fmt"
)

func Create(ctx context.Context, parent *cobra.Command, instanceService dbaasSdk.InstanceService) {
	
	var req_BackupRetentionDaysFlag *flags.IntFlag //CobraFlagsDefinition
	
	var req_NameFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_EngineIDFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_UserFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_PasswordFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_Volume_SizeFlag *flags.IntFlag //CobraFlagsDefinition
	
	var req_Volume_TypeFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_BackupStartAtFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_InstanceTypeIDFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_ParameterGroupIDFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_AvailabilityZoneFlag *flags.StrFlag //CobraFlagsDefinition
	
	

	cmd := &cobra.Command{
		Use:     "create",
		Short:   "todo",
		Long:    `todo2`,
		Run: func(cmd *cobra.Command, args []string) {
			
			
			var req dbaasSdk.InstanceCreateRequest// ServiceSDKParamCreate
			
			
			

			
			
			if req_BackupRetentionDaysFlag.IsChanged() {
				req.BackupRetentionDays = req_BackupRetentionDaysFlag.Value
			}// CobraFlagsAssign
			
			if req_NameFlag.IsChanged() {
				req.Name = *req_NameFlag.Value
			}// CobraFlagsAssign
			
			if req_EngineIDFlag.IsChanged() {
				req.EngineID = req_EngineIDFlag.Value
			}// CobraFlagsAssign
			
			if req_UserFlag.IsChanged() {
				req.User = *req_UserFlag.Value
			}// CobraFlagsAssign
			
			if req_PasswordFlag.IsChanged() {
				req.Password = *req_PasswordFlag.Value
			}// CobraFlagsAssign
			
			if req_Volume_SizeFlag.IsChanged() {
				req.Volume.Size = *req_Volume_SizeFlag.Value
			}// CobraFlagsAssign
			
			if req_Volume_TypeFlag.IsChanged() {
				req.Volume.Type = *req_Volume_TypeFlag.Value
			}// CobraFlagsAssign
			
			if req_BackupStartAtFlag.IsChanged() {
				req.BackupStartAt = req_BackupStartAtFlag.Value
			}// CobraFlagsAssign
			
			if req_InstanceTypeIDFlag.IsChanged() {
				req.InstanceTypeID = req_InstanceTypeIDFlag.Value
			}// CobraFlagsAssign
			
			if req_ParameterGroupIDFlag.IsChanged() {
				req.ParameterGroupID = req_ParameterGroupIDFlag.Value
			}// CobraFlagsAssign
			
			if req_AvailabilityZoneFlag.IsChanged() {
				req.AvailabilityZone = req_AvailabilityZoneFlag.Value
			}// CobraFlagsAssign
			

			instanceresponse, err := instanceService.Create(ctx, req)
			
			if err != nil {
			msg, detail := cmdutils.ParseSDKError(err)
					fmt.Println(msg)
					fmt.Println(detail)
					return
				}
			
			sdkResult, err := json.MarshalIndent(instanceresponse, "", "  ")

			if err != nil {
			msg, detail := cmdutils.ParseSDKError(err)
					fmt.Println(msg)
					fmt.Println(detail)
					return
				}
			
			fmt.Println(string(sdkResult))
		},
	}
	
	
	req_BackupRetentionDaysFlag = flags.NewIntP(cmd, "backup-retention-days", "b", 0, "")//CobraFlagsCreation
	
	req_NameFlag = flags.NewStrP(cmd, "name", "a", "", "")//CobraFlagsCreation
	
	req_EngineIDFlag = flags.NewStrP(cmd, "engine-i-d", "e", "", "")//CobraFlagsCreation
	
	req_UserFlag = flags.NewStrP(cmd, "user", "u", "", "")//CobraFlagsCreation
	
	req_PasswordFlag = flags.NewStrP(cmd, "password", "p", "", "")//CobraFlagsCreation
	
	req_Volume_SizeFlag = flags.NewIntP(cmd, "volume.size", "s", 0, "")//CobraFlagsCreation
	
	req_Volume_TypeFlag = flags.NewStrP(cmd, "volume.type", "t", "", "")//CobraFlagsCreation
	
	req_BackupStartAtFlag = flags.NewStrP(cmd, "backup-start-at", "c", "", "")//CobraFlagsCreation
	
	req_InstanceTypeIDFlag = flags.NewStrP(cmd, "instance-type-i-d", "i", "", "")//CobraFlagsCreation
	
	req_ParameterGroupIDFlag = flags.NewStrP(cmd, "parameter-group-i-d", "m", "", "")//CobraFlagsCreation
	
	req_AvailabilityZoneFlag = flags.NewStrP(cmd, "availability-zone", "v", "", "")//CobraFlagsCreation
	


	
	cmd.MarkFlagRequired("name")//CobraFlagsRequired
	
	cmd.MarkFlagRequired("user")//CobraFlagsRequired
	
	cmd.MarkFlagRequired("password")//CobraFlagsRequired
	
	parent.AddCommand(cmd)

}

