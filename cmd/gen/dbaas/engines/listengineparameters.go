/*
*	DO NOT EDIT THIS FILE
*	IT IS AUTO GENERATED BY MGC
*	TEMPLATE: product.template
 */

package engines

import (
	"context"

	
	"github.com/spf13/cobra"
	
	dbaasSdk "github.com/MagaluCloud/mgc-sdk-go/dbaas"
	
	flags "mgccli/cobra_utils/flags"
	
	"encoding/json"
	
	"mgccli/cmd_utils"
	
	"fmt"
)

func ListEngineParameters(ctx context.Context, parent *cobra.Command, engineService dbaasSdk.EngineService) {
	
	var engineIDFlag *flags.StrFlag //CobraFlagsDefinition
	
	var opts_DynamicFlag *flags.BoolFlag //CobraFlagsDefinition
	
	var opts_ModifiableFlag *flags.BoolFlag //CobraFlagsDefinition
	
	var opts_OffsetFlag *flags.IntFlag //CobraFlagsDefinition
	
	var opts_LimitFlag *flags.IntFlag //CobraFlagsDefinition
	
	

	cmd := &cobra.Command{
		Use:     "list-engine-parameters",
		Short:   "Engines, InstanceTypes, Instances, Replicas, ParametersGroup, Parameters...",
		Long:    `defaultLongDesc 3`,
		Run: func(cmd *cobra.Command, args []string) {
			
			
			var engineID string// ServiceSDKParamCreate
			
			var opts dbaasSdk.ListEngineParametersOptions// ServiceSDKParamCreate
			
			
			

			
			
			if engineIDFlag.IsChanged() {
				engineID = *engineIDFlag.Value
			}// CobraFlagsAssign
			
			if opts_DynamicFlag.IsChanged() {
				opts.Dynamic = opts_DynamicFlag.Value
			}// CobraFlagsAssign
			
			if opts_ModifiableFlag.IsChanged() {
				opts.Modifiable = opts_ModifiableFlag.Value
			}// CobraFlagsAssign
			
			if opts_OffsetFlag.IsChanged() {
				opts.Offset = opts_OffsetFlag.Value
			}// CobraFlagsAssign
			
			if opts_LimitFlag.IsChanged() {
				opts.Limit = opts_LimitFlag.Value
			}// CobraFlagsAssign
			

			engineparameterdetail, err := engineService.ListEngineParameters(ctx, engineID, opts)
			
			if err != nil {
			msg, detail := cmdutils.ParseSDKError(err)
					fmt.Println(msg)
					fmt.Println(detail)
					return
				}
			
			sdkResult, err := json.MarshalIndent(engineparameterdetail, "", "  ")

			if err != nil {
			msg, detail := cmdutils.ParseSDKError(err)
					fmt.Println(msg)
					fmt.Println(detail)
					return
				}
			
			fmt.Println(string(sdkResult))
		},
	}
	
	
	engineIDFlag = flags.NewStrP(cmd, "engine-i-d", "e", "", "")//CobraFlagsCreation
	
	opts_DynamicFlag = flags.NewBoolP(cmd, "dynamic", "y", false, "")//CobraFlagsCreation
	
	opts_ModifiableFlag = flags.NewBoolP(cmd, "modifiable", "m", false, "")//CobraFlagsCreation
	
	opts_OffsetFlag = flags.NewIntP(cmd, "offset", "f", 0, "")//CobraFlagsCreation
	
	opts_LimitFlag = flags.NewIntP(cmd, "limit", "l", 0, "")//CobraFlagsCreation
	


	
	cmd.MarkFlagRequired("engineID")//CobraFlagsRequired
	
	parent.AddCommand(cmd)

}

