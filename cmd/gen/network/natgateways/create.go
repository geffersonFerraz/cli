/*
*	DO NOT EDIT THIS FILE
*	IT IS AUTO GENERATED BY MGC
*	TEMPLATE: product.template
 */

package natgateways

import (
	"context"

	
	"github.com/spf13/cobra"
	
	networkSdk "github.com/MagaluCloud/mgc-sdk-go/network"
	
	flags "mgccli/cobra_utils/flags"
	
	"encoding/json"
	
	"fmt"
)

func Create(ctx context.Context, parent *cobra.Command, natGatewayService networkSdk.NatGatewayService) {
	
	var req_NameFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_DescriptionFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_ZoneFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_VPCIDFlag *flags.StrFlag //CobraFlagsDefinition
	
	

	cmd := &cobra.Command{
		Use:     "create",
		Short:   "todo",
		Long:    `todo2`,
		Run: func(cmd *cobra.Command, args []string) {
			
			
			var req networkSdk.CreateNatGatewayRequest// ServiceSDKParamCreate
			
			
			

			
			
			if req_NameFlag.IsChanged() {
				req.Name = *req_NameFlag.Value
			}// CobraFlagsAssign
			
			if req_DescriptionFlag.IsChanged() {
				req.Description = req_DescriptionFlag.Value
			}// CobraFlagsAssign
			
			if req_ZoneFlag.IsChanged() {
				req.Zone = *req_ZoneFlag.Value
			}// CobraFlagsAssign
			
			if req_VPCIDFlag.IsChanged() {
				req.VPCID = *req_VPCIDFlag.Value
			}// CobraFlagsAssign
			

			result, err := natGatewayService.Create(ctx, req)
			sdkResult, err := json.MarshalIndent(result, "", "  ")
			if err != nil {
				fmt.Println(err.Error())
			}
			fmt.Println(string(sdkResult))
			if err != nil {
				fmt.Println(err.Error())
			}
		},
	}
	
	
	req_NameFlag = flags.NewStrP(cmd, "name", "n", "", "")//CobraFlagsCreation
	
	req_DescriptionFlag = flags.NewStrP(cmd, "description", "e", "", "")//CobraFlagsCreation
	
	req_ZoneFlag = flags.NewStrP(cmd, "zone", "z", "", "")//CobraFlagsCreation
	
	req_VPCIDFlag = flags.NewStrP(cmd, "v-p-c-i-d", "v", "", "")//CobraFlagsCreation
	


	
	cmd.MarkFlagRequired("name")//CobraFlagsRequired
	
	cmd.MarkFlagRequired("zone")//CobraFlagsRequired
	
	cmd.MarkFlagRequired("v-p-c-i-d")//CobraFlagsRequired
	
	parent.AddCommand(cmd)

}

