/*
*	DO NOT EDIT THIS FILE
*	IT IS AUTO GENERATED BY MGC
*	TEMPLATE: product.template
 */

package subnetpools

import (
	"context"

	
	"github.com/spf13/cobra"
	
	networkSdk "github.com/MagaluCloud/mgc-sdk-go/network"
	
	flags "mgccli/cobra_utils/flags"
	
	"encoding/json"
	
	"fmt"
)

func List(ctx context.Context, parent *cobra.Command, subnetPoolService networkSdk.SubnetPoolService) {
	
	var opts_SortFlag *flags.StrFlag //CobraFlagsDefinition
	
	var opts_LimitFlag *flags.IntFlag //CobraFlagsDefinition
	
	var opts_OffsetFlag *flags.IntFlag //CobraFlagsDefinition
	
	

	cmd := &cobra.Command{
		Use:     "list",
		Short:   "todo",
		Long:    `todo2`,
		Run: func(cmd *cobra.Command, args []string) {
			
			
			var opts networkSdk.ListOptions// ServiceSDKParamCreate
			
			
			

			
			
			if opts_SortFlag.IsChanged() {
				opts.Sort = opts_SortFlag.Value
			}// CobraFlagsAssign
			
			if opts_LimitFlag.IsChanged() {
				opts.Limit = opts_LimitFlag.Value
			}// CobraFlagsAssign
			
			if opts_OffsetFlag.IsChanged() {
				opts.Offset = opts_OffsetFlag.Value
			}// CobraFlagsAssign
			

			subnetpoolresponse, err := subnetPoolService.List(ctx, opts)
			sdkResult, err := json.MarshalIndent(subnetpoolresponse, "", "  ")
			if err != nil {
				fmt.Println(err.Error())
			}
			fmt.Println(string(sdkResult))
			if err != nil {
				fmt.Println(err.Error())
			}
		},
	}
	
	
	opts_SortFlag = flags.NewStrP(cmd, "sort", "s", "", "Sort specifies the field and direction for sorting results")//CobraFlagsCreation
	
	opts_LimitFlag = flags.NewIntP(cmd, "limit", "l", 0, "Limit specifies the maximum number of items to return")//CobraFlagsCreation
	
	opts_OffsetFlag = flags.NewIntP(cmd, "offset", "f", 0, "Offset specifies the number of items to skip")//CobraFlagsCreation
	


	
	parent.AddCommand(cmd)

}

