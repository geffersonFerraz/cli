/*
*	DO NOT EDIT THIS FILE
*	IT IS AUTO GENERATED BY MGC
*	TEMPLATE: product.template
 */

package volumes

import (
	"context"

	
	"github.com/spf13/cobra"
	
	blockstorageSdk "github.com/MagaluCloud/mgc-sdk-go/blockstorage"
	
	flags "mgccli/cobra_utils/flags"
	
	"encoding/json"
	
	"fmt"
)

func Create(ctx context.Context, parent *cobra.Command, volumeService blockstorageSdk.VolumeService) {
	
	var req_AvailabilityZoneFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_NameFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_SizeFlag *flags.IntFlag //CobraFlagsDefinition
	
	var req_Type_IDFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_Type_NameFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_EncryptedFlag *flags.BoolFlag //CobraFlagsDefinition
	
	

	cmd := &cobra.Command{
		Use:     "create",
		Short:   "todo",
		Long:    `todo2`,
		Run: func(cmd *cobra.Command, args []string) {
			
			
			var req blockstorageSdk.CreateVolumeRequest// ServiceSDKParamCreate
			
			
			

			
			
			if req_AvailabilityZoneFlag.IsChanged() {
				req.AvailabilityZone = req_AvailabilityZoneFlag.Value
			}// CobraFlagsAssign
			
			if req_NameFlag.IsChanged() {
				req.Name = *req_NameFlag.Value
			}// CobraFlagsAssign
			
			if req_SizeFlag.IsChanged() {
				req.Size = *req_SizeFlag.Value
			}// CobraFlagsAssign
			
			if req_Type_IDFlag.IsChanged() {
				req.Type.ID = req_Type_IDFlag.Value
			}// CobraFlagsAssign
			
			if req_Type_NameFlag.IsChanged() {
				req.Type.Name = req_Type_NameFlag.Value
			}// CobraFlagsAssign
			
			if req_EncryptedFlag.IsChanged() {
				req.Encrypted = req_EncryptedFlag.Value
			}// CobraFlagsAssign
			

			result, err := volumeService.Create(ctx, req)
			sdkResult, err := json.MarshalIndent(result, "", "  ")
			if err != nil {
				fmt.Println(err.Error())
			}
			fmt.Println(string(sdkResult))
			if err != nil {
				fmt.Println(err.Error())
			}
		},
	}
	
	
	req_AvailabilityZoneFlag = flags.NewStrP(cmd, "availability-zone", "a", "", "")//CobraFlagsCreation
	
	req_NameFlag = flags.NewStrP(cmd, "name", "m", "", "")//CobraFlagsCreation
	
	req_SizeFlag = flags.NewIntP(cmd, "size", "s", 0, "")//CobraFlagsCreation
	
	req_Type_IDFlag = flags.NewStrP(cmd, "type.id", "i", "", "")//CobraFlagsCreation
	
	req_Type_NameFlag = flags.NewStrP(cmd, "type.name", "e", "", "")//CobraFlagsCreation
	
	req_EncryptedFlag = flags.NewBoolP(cmd, "encrypted", "c", false, "")//CobraFlagsCreation
	


	
	cmd.MarkFlagRequired("name")//CobraFlagsRequired
	
	cmd.MarkFlagRequired("size")//CobraFlagsRequired
	
	parent.AddCommand(cmd)

}

