/*
*	DO NOT EDIT THIS FILE
*	IT IS AUTO GENERATED BY MGC
*	TEMPLATE: product.template
 */

package volumes

import (
	"context"

	
	"github.com/spf13/cobra"
	
	blockstorageSdk "github.com/MagaluCloud/mgc-sdk-go/blockstorage"
	
	flags "mgccli/cobra_utils/flags"
	
	"mgccli/cmd_utils"
	
	"fmt"
)

func Retype(ctx context.Context, parent *cobra.Command, volumeService blockstorageSdk.VolumeService) {
	
	var idFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_NewType_IDFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_NewType_NameFlag *flags.StrFlag //CobraFlagsDefinition
	
	

	cmd := &cobra.Command{
		Use:     "retype",
		Short:   "Volumes, VolumeTypes, Snapshots.",
		Long:    `defaultLongDesc 3`,
		Run: func(cmd *cobra.Command, args []string) {
			
			
			var id string// ServiceSDKParamCreate
			
			var req blockstorageSdk.RetypeVolumeRequest// ServiceSDKParamCreate
			
			
			

			
			
			if idFlag.IsChanged() {
				id = *idFlag.Value
			}// CobraFlagsAssign
			
			if req_NewType_IDFlag.IsChanged() {
				req.NewType.ID = req_NewType_IDFlag.Value
			}// CobraFlagsAssign
			
			if req_NewType_NameFlag.IsChanged() {
				req.NewType.Name = req_NewType_NameFlag.Value
			}// CobraFlagsAssign
			

			err := volumeService.Retype(ctx, id, req)
			
			if err != nil {
			msg, detail := cmdutils.ParseSDKError(err)
					fmt.Println(msg)
					fmt.Println(detail)
					return
				}
			
		},
	}
	
	
	idFlag = flags.NewStrP(cmd, "id", "i", "", "")//CobraFlagsCreation
	
	req_NewType_IDFlag = flags.NewStrP(cmd, "new-type.id", "a", "", "")//CobraFlagsCreation
	
	req_NewType_NameFlag = flags.NewStrP(cmd, "new-type.name", "m", "", "")//CobraFlagsCreation
	


	
	cmd.MarkFlagRequired("id")//CobraFlagsRequired
	
	parent.AddCommand(cmd)

}

