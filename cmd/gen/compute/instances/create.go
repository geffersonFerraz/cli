/*
*	DO NOT EDIT THIS FILE
*	IT IS AUTO GENERATED BY MGC
*	TEMPLATE: product.template
 */

package instances

import (
	"context"

	
	"github.com/spf13/cobra"
	
	computeSdk "github.com/MagaluCloud/mgc-sdk-go/compute"
	
	flags "gfcli/cobra_utils/flags"
	
	"encoding/json"
	
	"gfcli/cmd_utils"
	
	"fmt"
)

func Create(ctx context.Context, parent *cobra.Command, instanceService computeSdk.InstanceService) {
	
	var req_SshKeyNameFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_UserDataFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_AvailabilityZoneFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_Image_IDFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_Image_NameFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_LabelsFlag *flags.StrSliceFlag //CobraFlagsDefinition
	
	var req_MachineType_IDFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_MachineType_NameFlag *flags.StrFlag //CobraFlagsDefinition
	
	var req_NameFlag *flags.StrFlag //CobraFlagsDefinition
	
	

	cmd := &cobra.Command{
		Use:     "create",
		Short:   "Instances, Images, InstanceTypes, Snapshots.",
		Long:    `defaultLongDesc 3`,
		Run: func(cmd *cobra.Command, args []string) {
			
			
			var req computeSdk.CreateRequest// ServiceSDKParamCreate
			
			
			

			
			
			if req_SshKeyNameFlag.IsChanged() {
				req.SshKeyName = req_SshKeyNameFlag.Value
			}// CobraFlagsAssign
			
			if req_UserDataFlag.IsChanged() {
				req.UserData = req_UserDataFlag.Value
			}// CobraFlagsAssign
			
			if req_AvailabilityZoneFlag.IsChanged() {
				req.AvailabilityZone = req_AvailabilityZoneFlag.Value
			}// CobraFlagsAssign
			
			if req_Image_IDFlag.IsChanged() {
				req.Image.ID = req_Image_IDFlag.Value
			}// CobraFlagsAssign
			
			if req_Image_NameFlag.IsChanged() {
				req.Image.Name = req_Image_NameFlag.Value
			}// CobraFlagsAssign
			
			if req_LabelsFlag.IsChanged() {
				req.Labels = req_LabelsFlag.Value
			}// CobraFlagsAssign
			
			if req_MachineType_IDFlag.IsChanged() {
				req.MachineType.ID = req_MachineType_IDFlag.Value
			}// CobraFlagsAssign
			
			if req_MachineType_NameFlag.IsChanged() {
				req.MachineType.Name = req_MachineType_NameFlag.Value
			}// CobraFlagsAssign
			
			if req_NameFlag.IsChanged() {
				req.Name = *req_NameFlag.Value
			}// CobraFlagsAssign
			

			result, err := instanceService.Create(ctx, req)
			
			if err != nil {
			msg, detail := cmdutils.ParseSDKError(err)
					fmt.Println(msg)
					fmt.Println(detail)
					return
				}
			
			sdkResult, err := json.MarshalIndent(result, "", "  ")

			if err != nil {
			msg, detail := cmdutils.ParseSDKError(err)
					fmt.Println(msg)
					fmt.Println(detail)
					return
				}
			
			fmt.Println(string(sdkResult))
		},
	}
	
	
	req_SshKeyNameFlag = flags.NewStrP(cmd, "ssh-key-name", "s", "", "")//CobraFlagsCreation
	
	req_UserDataFlag = flags.NewStrP(cmd, "user-data", "u", "", "")//CobraFlagsCreation
	
	req_AvailabilityZoneFlag = flags.NewStrP(cmd, "availability-zone", "a", "", "")//CobraFlagsCreation
	
	req_Image_IDFlag = flags.NewStrP(cmd, "image.id", "i", "", "")//CobraFlagsCreation
	
	req_Image_NameFlag = flags.NewStrP(cmd, "image.name", "m", "", "")//CobraFlagsCreation
	
	req_LabelsFlag = flags.NewStrSliceP(cmd, "labels", "l", []string{}, "")//CobraFlagsCreation
	
	req_MachineType_IDFlag = flags.NewStrP(cmd, "machine-type.id", "b", "", "")//CobraFlagsCreation
	
	req_MachineType_NameFlag = flags.NewStrP(cmd, "machine-type.name", "e", "", "")//CobraFlagsCreation
	
	req_NameFlag = flags.NewStrP(cmd, "name", "c", "", "")//CobraFlagsCreation
	


	
	cmd.MarkFlagRequired("name")//CobraFlagsRequired
	
	parent.AddCommand(cmd)

}

